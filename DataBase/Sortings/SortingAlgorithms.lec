Розглянемо приклад задачі сортування послідовності чисел за зростанням. Ця задача часто виникає на практиці і, по суті, стане центральною проблемою курсу. 
Задача сортування формально визначається наступним чином. 
Вхід: послідовність n чисел <a1,a2,…,an>. Вихід: Перестановка<a1’,a2’,…,an’> вхідної послідовності таким чином, що для всіх її членів, співвідношення a1?a2?…?an. 
Наприклад, якщо подається на вхід послідовність <31, 41, 59, 26, 11, 58>, висновок алгоритму сортування повинен бути таким: <11, 26, 31, 41, 58, 59>. Ця оригінальна послідовність називається екземпляром задачі сортування
В реальних задачах часто потрібно сортувати не самі цілі числа, а певні значення, що вказують на, можливо, досить великі структури даних. Ці значення в такому випадку називаються ключами.
 Властивості та класифікація Стійкість – стійкий алгоритм сортування не змінює взаємного розташування елементів з однаковими ключами. 
Природність поведінки – ефективність методу при обробці вже упорядкованих або частково впорядкованих даних. Алгоритм поводиться природно, якщо враховує цю характеристику вхідної послідовності і працює краще. 
Використання операції порівняння. Алгоритми, що використовують для сортування порівняння елементів між собою, називаються заснованими на порівняннях. Мінімальна трудомісткість гіршого випадку для цих алгоритмів становить O(n log n), але вони відрізняються гнучкістю застосування. Для спеціальних випадків (типів даних) існують більш ефективні алгоритми. 
Ще однією важливою властивістю алгоритму є його сфера застосування. Тут основних типів сортування два: 
Внутрішнє сортування оперує масивами, що повністю поміщаються в оперативній пам'яті з довільним доступом до будь-якого елементу. Дані зазвичай упорядковуються на тому ж місці без додаткових витрат. 
В сучасних архітектурах персональних комп'ютерів широко застосовується підкачка і хешування пам'яті. Алгоритм сортування повинен добре поєднуватися з застосовуваними алгоритмами хешування і підкачки. 
Зовнішнє сортування оперує запам'ятовуючими пристроями великого обсягу, але не з довільним доступом, а послідовним (впорядкування файлів), тобто в даний момент «видно» тільки один елемент, а витрати на перемотування в порівнянні з оперативною пам'яттю невиправдано великі. Це накладає деякі додаткові обмеження на алгоритм і призводить до спеціальних методів впорядкування, що зазвичай використовують додатковий дисковий простір. Крім того, доступ до даних у зовнішній пам'яті відбувається набагато повільніше, ніж операції з оперативною пам'яттю. 
Також алгоритми класифікуються за: 
- потребами в додатковій пам'яті або її відсутності; 
- потребами в знаннях про структуру даних, що виходять за рамки операції порівняння, або відсутності такої. 