Швидке сортування, сортування Хоара (quicksort) Один з найшвидших відомих універсальних алгоритмів сортування масивів: в середньому O (n logn) обмінів при упорядкуванні n елементів; через наявність ряду недоліків на практиці зазвичай використовується з деякими доробками. 
QuickSort є істотно поліпшеним варіантом алгоритму сортування за допомогою прямого обміну (його варіанти відомі як «Бульбашкове сортування» та «шейкерне сортування»), відомого, в тому числі, своєю низькою ефективністю. Принципова відмінність полягає в тому, що в першу чергу проводяться перестановки на найбільш можливій відстані і після кожного проходу елементи діляться на дві незалежні групи. Цікавий факт: поліпшення самого неефективного прямого методу сортування дало в результаті один з найбільш ефективних поліпшених методів. 
Загальна ідея алгоритму полягає в наступному: 
Вибрати з масиву елемент, який називають опорним. Це може бути будьякий з елементів масиву. Від вибору опорного елемента не залежить коректність алгоритму, але в окремих випадках може сильно залежати його ефективність. 
Порівняти всі інші елементи з опорним і переставити їх у масиві так, щоб розбити масив на три безперервних підмасиви, наступні один за одним: «менші опорного», «рівні» і «більші». 
Для підмасивів «менших» і «більших» значень виконати рекурсивно ту ж послідовність операцій, якщо довжина відрізка більше одиниці. 
На практиці масив зазвичай ділять не на три, а на дві частини: наприклад, «менші опорного» та «рівні і більші»; такий підхід в загальному випадку ефективніше, так як спрощує алгоритм поділу. 
Вибір опорного елемента 
У ранніх реалізаціях, як правило, опорним вибирався перший елемент, що знижувало продуктивність на відсортованих масивах. Для поліпшення ефективності може вибиратися середній, випадковий елемент або (для великих масивів) медіана першого, середнього і останнього елементів. Медіана всієї послідовності є оптимальним опорним елементом, але її обчислення занадто трудомістке для використання в сортуванні. 
Розбиття Ломуто 
Даний алгоритм розбиття був запропонований Ніко Ломуто і популяризований в книгах Бентлі (Programming Pearls) і Кормена (Введення в алгоритми). В даному прикладі опорним вибирається останній елемент. Алгоритм зберігає індекс в змінній i. Кожен раз, коли знаходиться елемент, менше або дорівнює опорного, індекс збільшується, і елемент вставляється перед опорним. Хоч ця схема розбиття простіша і компактніша, ніж схема Хоара, вона менш ефективна і використовується в навчальних матеріалах. Складність даного швидкого сортування падає до O(n2), коли масив вже відсортований або всі його елементи рівні. Існують різні методи оптимізації даного сортування: алгоритми вибору опорного елемента, використання сортування вставками на маленьких масивах. 
Розбиття Хоара 
Дана схема використовує два індекси (один на початку масиву, інший в кінці), які наближаються один до одного, поки не знайдеться пара елементів, де один більше опорного і розташований перед ним, а другий менше і розташований після. Ці елементи міняються місцями. Обмін відбувається до тих пір, поки індекси не перетнуться. Алгоритм повертає останній індекс. Схема Хоара ефективніше схеми Ломуто, так як відбувається в середньому в три рази менше обмінів елементів, і розбиття ефективніше, навіть коли всі елементи рівні. Подібно схемі Ломуто, дана схема також показує ефективність в O(n2), коли вхідний масив вже відсортований. 
Часова складність алгоритму в усіх випадках –  O(n^2)-найгірший, O(nlоgn)-середній.  
Ємнісна складність алгоритму – О(n) всього, O(lоgn) додатково. 
